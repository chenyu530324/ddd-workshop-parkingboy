@startuml

class ParkingManager {
    List<ParkingBoy> parkingBoys
}

Interface ChoseParkingLot {
  ParkingLot chooseParkingLot()
}

Abstract Class ParkingBoy << Entity >> {
  List<ParkingLot> parkingLots

  + void setParkingLots (ParkingLot[] parkingLots)
  + List<ParkingLot> getParkingLots()
}

Class JuniorParkingBoy << Entity >> {

}

Class SeniorParkingBoy << Entity >> {

}


class ParkingLot << Entity >> {
  String serialNumber
  int capacity 
  int sortIndex
  + Ticket park(Car car)
}

Class Car << Value Object >> {
    String plateNumber
}

Class Ticket << Value Object >> {
  String carPlateNumber;
  String parkingLotSerialNumber;
}

Ticket "1" *--> "1" Car
ParkingLot "1" o--> "0..many" Ticket
ParkingBoy "1" o--> "0..many" ParkingLot
ParkingManager "1" o--> "0..many" ParkingBoy
ChoseParkingLot <|-- ParkingBoy
ParkingBoy <|-- JuniorParkingBoy
ParkingBoy <|-- SeniorParkingBoy



@enduml
